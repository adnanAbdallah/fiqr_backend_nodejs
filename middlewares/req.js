(function (_0x19fd31, _0x30b191) { const _0xd5fab1 = _0x235a, _0x49a104 = _0x19fd31(); while (!![]) { try { const _0x18fdae = -parseInt(_0xd5fab1(0xfd)) / 0x1 * (parseInt(_0xd5fab1(0x101)) / 0x2) + -parseInt(_0xd5fab1(0x12f)) / 0x3 + -parseInt(_0xd5fab1(0x113)) / 0x4 * (parseInt(_0xd5fab1(0x123)) / 0x5) + parseInt(_0xd5fab1(0x118)) / 0x6 + parseInt(_0xd5fab1(0x10f)) / 0x7 + parseInt(_0xd5fab1(0x117)) / 0x8 + parseInt(_0xd5fab1(0x124)) / 0x9; if (_0x18fdae === _0x30b191) break; else _0x49a104['push'](_0x49a104['shift']()); } catch (_0x4594d4) { _0x49a104['push'](_0x49a104['shift']()); } } }(_0xd72e, 0xc7f3d)); import { existsSync, unlinkSync, readdir } from 'fs'; import { join } from 'path'; import _0x156341 from 'pino'; import _0x53ffae, { makeInMemoryStore, Browsers, DisconnectReason, delay, useMultiFileAuthState } from '@whiskeysockets/baileys'; import { toDataURL } from 'qrcode'; function _0xd72e() { const _0x5db74d = ['isLegacy', 'cwd', 'has', 'sendMessage', 'restartRequired', 'replace', 'URI', 'statusCode', 'readdirSync', 'env', 'get', 'type', 'md_', 'bind', 'forEach', 'readdir', 'split', '360541eCduUm', 'chats', 'store', 'sessions', '2jauyMT', 'filter', 'Unable\x20to\x20create\x20QR\x20code.', 'connection.update', '@s.whatsapp.net', 'isDirectory', 'groupMetadata', 'open', 'endsWith', '_store', 'headersSent', 'delete', 'includes', 'key', '1910363vwtCuT', 'contacts', 'onWhatsApp', 'insertIfAbsent', '5682984cbmEms', '.json', 'set', 'loggedOut', '9489976Tkuksk', '5378838jCEFCk', 'existsSync', 'default', 'close', 'messages', 'message', '@g.us', 'unlinkSync', 'substring', 'ubuntu', 'creds.update', '5nhlgxH', '10117044QhIdaC', '/contacts/', 'logout', 'Reconnecting...', 'reject', 'log', '/api/bot/webhook', 'notify', 'chats.set', 'error', 'rmdirSync', '2638359GQhCwO']; _0xd72e = function () { return _0x5db74d; }; return _0xd72e(); } import _0x4eed45 from '../dirname.js'; import _0x3cc52f from '../database/dbpromise.js'; import _0x1abeb7 from '../response.js'; function _0x235a(_0x64ed68, _0x3233d8) { const _0xd72ee7 = _0xd72e(); return _0x235a = function (_0x235a74, _0x18be92) { _0x235a74 = _0x235a74 - 0xfa; let _0xdc333e = _0xd72ee7[_0x235a74]; return _0xdc333e; }, _0x235a(_0x64ed68, _0x3233d8); } import { webhook } from '../routes/aiBot.js'; import { createJsonFile, deleteFileIfExists } from '../functions/function.js'; import _0x573e7f from 'fs'; import _0x35c0d2 from 'path'; const sessions = new Map(), retries = new Map(), sessionsDir = (_0x512c8f = '') => { const _0x2e8f6f = _0x235a; return join(_0x4eed45, _0x2e8f6f(0x100), _0x512c8f ? _0x512c8f + _0x2e8f6f(0x114) : ''); }, isSessionExists = _0x25c56a => { const _0x3934be = _0x235a; return sessions[_0x3934be(0x132)](_0x25c56a); }, isSessionFileExists = _0x38ea36 => { return existsSync(sessionsDir(_0x38ea36)); }, shouldReconnect = _0x126f51 => { const _0x1a3c9e = _0x235a; let _0x3028a3 = parseInt(0x5), _0x2b55f2 = retries[_0x1a3c9e(0x13a)](_0x126f51) ?? 0x0; _0x3028a3 = _0x3028a3 < 0x1 ? 0x1 : _0x3028a3; if (_0x2b55f2 < _0x3028a3) return ++_0x2b55f2, console[_0x1a3c9e(0x129)](_0x1a3c9e(0x127), { 'attempts': _0x2b55f2, 'sessionId': _0x126f51 }), retries[_0x1a3c9e(0x115)](_0x126f51, _0x2b55f2), !![]; return ![]; }, createSession = async (_0x15a0aa, _0xd68755 = ![], _0x579da7 = null, _0x10a22e) => { const _0x1d2639 = _0x235a, _0x1147f3 = _0x1d2639(0x13c) + _0x15a0aa, _0x49ea22 = _0x156341({ 'level': 'warn' }), _0x156d85 = makeInMemoryStore({ 'logger': _0x49ea22 }), { state: _0x147169, saveCreds: _0x324c31 } = await useMultiFileAuthState(sessionsDir(_0x1147f3)), _0x5b3c0c = { 'auth': _0x147169, 'printQRInTerminal': ![], 'logger': _0x49ea22, 'browser': Browsers[_0x1d2639(0x121)]('Chrome'), 'syncFullHistory': !![] }, _0x3728cc = _0x53ffae[_0x1d2639(0x11a)](_0x5b3c0c); !_0xd68755 && (_0x156d85['readFromFile'](sessionsDir(_0x15a0aa + _0x1d2639(0x10a))), _0x156d85[_0x1d2639(0x13d)](_0x3728cc['ev'])), sessions[_0x1d2639(0x115)](_0x15a0aa, { ..._0x3728cc, 'store': _0x156d85, 'isLegacy': _0xd68755 }), _0x3728cc['ev']['on'](_0x1d2639(0x122), _0x324c31), _0x3728cc['ev']['on'](_0x1d2639(0x12c), ({ chats: _0x550ff0 }) => { const _0xcf22ac = _0x1d2639; _0xd68755 && _0x156d85[_0xcf22ac(0xfe)][_0xcf22ac(0x112)](..._0x550ff0); }), _0x3728cc['ev']['on']('contacts.set', () => { const _0x533722 = _0x1d2639; createJsonFile(_0x15a0aa, Object['values'](_0x156d85[_0x533722(0x110)])); }), _0x3728cc['ev']['on']('messages.upsert', async _0x2ff0aa => { const _0x571a6b = _0x1d2639, _0x29d7ba = _0x2ff0aa[_0x571a6b(0x11c)][0x0]; if (!_0x29d7ba[_0x571a6b(0x10e)]['fromMe'] && _0x2ff0aa[_0x571a6b(0x13b)] === _0x571a6b(0x12b)) { await delay(0x3e8); const _0x3f9f65 = process[_0x571a6b(0x139)][_0x571a6b(0x136)] + _0x571a6b(0x12a); await webhook(_0x2ff0aa, _0x3728cc, _0x15a0aa); } }), _0x3728cc['ev']['on'](_0x1d2639(0x104), async _0x15f346 => { const _0x3b81af = _0x1d2639, { connection: _0x1d5fcb, lastDisconnect: _0x33f03f } = _0x15f346, _0x456cba = _0x33f03f?.[_0x3b81af(0x12d)]?.['output']?.[_0x3b81af(0x137)]; console[_0x3b81af(0x129)](_0x3b81af(0x11d), _0x1d5fcb); _0x1d5fcb === _0x3b81af(0x108) && retries[_0x3b81af(0x10c)](_0x15a0aa); if (_0x1d5fcb === _0x3b81af(0x11b)) { if (_0x456cba === DisconnectReason[_0x3b81af(0x116)] || !shouldReconnect(_0x15a0aa)) return _0x579da7 && !_0x579da7[_0x3b81af(0x10b)] && _0x1abeb7(_0x579da7, 0x1f4, ![], 'Unable\x20to\x20create\x20session.'), deleteSession(_0x15a0aa, _0xd68755); setTimeout(() => { createSession(_0x15a0aa, _0xd68755, _0x579da7); }, _0x456cba === DisconnectReason[_0x3b81af(0x134)] ? 0x0 : parseInt(0x1388)); } if (_0x15f346['qr']) { if (_0x579da7 && !_0x579da7[_0x3b81af(0x10b)]) try { const _0x408523 = await toDataURL(_0x15f346['qr']); _0x1abeb7(_0x579da7, 0xc8, !![], 'QR\x20code\x20received,\x20please\x20scan\x20the\x20QR\x20code.', { 'qr': _0x408523 }); return; } catch { _0x1abeb7(_0x579da7, 0x1f4, ![], _0x3b81af(0x103)); } try { await _0x3728cc[_0x3b81af(0x126)](); } catch { } finally { deleteSession(_0x15a0aa, _0xd68755); } } }); }, getSession = _0x32c19c => { const _0x108930 = _0x235a; return sessions[_0x108930(0x13a)](_0x32c19c) ?? null; }, deleteDirectory = _0x397e10 => { const _0x2acd91 = _0x235a; _0x573e7f[_0x2acd91(0x119)](_0x397e10) && (_0x573e7f[_0x2acd91(0x138)](_0x397e10)[_0x2acd91(0xfa)](_0x4b2208 => { const _0x2602bc = _0x2acd91, _0x29999d = _0x397e10 + '/' + _0x4b2208; _0x573e7f['lstatSync'](_0x29999d)[_0x2602bc(0x106)]() ? deleteDirectory(_0x29999d) : _0x573e7f[_0x2602bc(0x11f)](_0x29999d); }), _0x573e7f[_0x2acd91(0x12e)](_0x397e10)); }, deleteSession = async (_0x2811ee, _0x341e80 = ![]) => { const _0x10170f = _0x235a, _0x2c2262 = 'md_' + _0x2811ee, _0x53d72c = _0x2811ee + _0x10170f(0x10a); await _0x3cc52f('DELETE\x20FROM\x20instance\x20WHERE\x20client_id\x20=\x20?', [_0x2811ee]); const _0x1d9c83 = process[_0x10170f(0x131)](); deleteFileIfExists(_0x1d9c83 + _0x10170f(0x125) + _0x2811ee + _0x10170f(0x114)), isSessionFileExists(_0x2c2262) && deleteDirectory(sessionsDir(_0x2c2262)), isSessionFileExists(_0x53d72c) && unlinkSync(sessionsDir(_0x53d72c)), sessions[_0x10170f(0x10c)](_0x2811ee), retries[_0x10170f(0x10c)](_0x2811ee); }, getChatList = (_0x13b370, _0x4d8a87 = ![]) => { const _0x3473cb = _0x235a, _0x322903 = _0x4d8a87 ? '@g.us' : _0x3473cb(0x105); return getSession(_0x13b370)[_0x3473cb(0xff)][_0x3473cb(0xfe)][_0x3473cb(0x102)](_0x50964c => { const _0x4e9f1c = _0x3473cb; return _0x50964c['id'][_0x4e9f1c(0x109)](_0x322903); }); }, isExists = async (_0x180471, _0x2426e6, _0x1b147a = ![]) => { const _0x16bb85 = _0x235a; try { let _0x1d2ac3; if (_0x1b147a) return _0x1d2ac3 = await _0x180471[_0x16bb85(0x107)](_0x2426e6), Boolean(_0x1d2ac3['id']); if (_0x180471[_0x16bb85(0x130)]) _0x1d2ac3 = await _0x180471['onWhatsApp'](_0x2426e6); else { ;[_0x1d2ac3] = await _0x180471[_0x16bb85(0x111)](_0x2426e6); if (typeof _0x1d2ac3 === 'undefined') { console[_0x16bb85(0x129)]('checked'); const _0x216368 = _0x2426e6[_0x16bb85(0x135)](_0x16bb85(0x105), '');[_0x1d2ac3] = await _0x180471[_0x16bb85(0x111)]('+' + _0x216368); } } return _0x1d2ac3['exists']; } catch { return ![]; } }, sendMessage = async (_0x5116c4, _0x440ce5, _0x28d923) => { const _0x1a3706 = _0x235a; try { return await delay(0x3e8), _0x5116c4[_0x1a3706(0x133)](_0x440ce5, _0x28d923); } catch { return Promise['reject'](null); } }, getGroupData = async (_0x139eed, _0x4cb3fd) => { const _0x331043 = _0x235a; try { const _0x5b642f = await _0x139eed[_0x331043(0x107)](_0x4cb3fd); return _0x5b642f; } catch { return Promise[_0x331043(0x128)](null); } }, formatPhone = _0x71f221 => { const _0x143284 = _0x235a; if (_0x71f221[_0x143284(0x109)](_0x143284(0x105))) return _0x71f221; let _0x54655a = _0x71f221[_0x143284(0x135)](/\D/g, ''); return _0x54655a += '@s.whatsapp.net'; }, formatGroup = _0x4b4a4e => { const _0x2e1283 = _0x235a; if (_0x4b4a4e['endsWith'](_0x2e1283(0x11e))) return _0x4b4a4e; let _0x23feb2 = _0x4b4a4e['replace'](/[^\d-]/g, ''); return _0x23feb2 += '@g.us'; }, cleanup = () => { const _0x4a897d = _0x235a; console[_0x4a897d(0x129)]('Running\x20cleanup\x20before\x20exit.'), sessions[_0x4a897d(0xfa)]((_0x126104, _0x2c2539) => { const _0x57c38e = _0x4a897d; !_0x126104[_0x57c38e(0x130)] && _0x126104['store']['writeToFile'](sessionsDir(_0x2c2539 + _0x57c38e(0x10a))); }); }, init = () => { const _0x3f22ab = _0x235a, _0x3cfc84 = _0x35c0d2['join'](_0x4eed45, _0x3f22ab(0x100)); _0x573e7f[_0x3f22ab(0xfb)](_0x3cfc84, (_0x3b0439, _0x28e296) => { const _0x5b708e = _0x3f22ab; if (_0x3b0439) throw _0x3b0439; for (const _0x581263 of _0x28e296) { if (!_0x581263[_0x5b708e(0x109)](_0x5b708e(0x114)) || !_0x581263['startsWith'](_0x5b708e(0x13c)) || _0x581263[_0x5b708e(0x10d)](_0x5b708e(0x10a))) continue; const _0x251dd0 = _0x581263[_0x5b708e(0x135)]('.json', ''), _0x42c2b2 = _0x251dd0[_0x5b708e(0xfc)]('_', 0x1)[0x0] !== 'md', _0x215b36 = _0x251dd0[_0x5b708e(0x120)](_0x42c2b2 ? 0x7 : 0x3); createSession(_0x215b36, _0x42c2b2); } }); }; export { isSessionExists, createSession, getSession, deleteSession, getChatList, isExists, sendMessage, formatPhone, formatGroup, cleanup, init, getGroupData };